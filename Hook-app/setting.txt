{
  "codeLens.enable": true,
  "codeLens.position": "eol",
  "coc.preferences.extensionUpdateCheck": "daily",
  "coc.preferences.enableMessageDialog": true,
  "coc.preferences.formatOnType": true,
  "coc.preferences.willSaveHandlerTimeout": 1000,
  "coc.preferences.enableLinkedEditing": true,
  "coc.preferences.formatOnSaveFiletypes": [
    "c",
    "go",
    "python",
    "rust",
    "markdown",
    "javascript",
    "typescript",
    "json",
    "jsonc"
  ],
  "coc.source.file.ignoreHidden": false,
  "clangd.path": "~/bin/clangd",
  "clangd.arguments": [
    "--query-driver=/usr/bin/clang++",
    "--header-insertion-decorators=false",
    "--background-index"
  ],


  "diagnostic.errorSign": "‚úó",
  "diagnostic.warningSign": "‚ö†",
  "diagnostic.infoSign": "ÔÑ©",
  "diagnostic.hintSign": "ÔÇ≠ ",
  "list.indicator": ">",
  "list.selectedSignText": "ÔÄå ",

  "diagnostic.errorSign": "Ôôô", // ÔÅû ‚Ä¢‚Ä¢
   "diagnostic.warningSign": "Ôî©", // ÔÅ± ‚Ä¢
   "diagnostic.hintSign": "Ô†µ", // ‚Ä¢
   "diagnostic.infoSign": "ÔÅö", // ‚Ä¢

  "deno.importMap": "./import_map.json",
  "diagnostic.floatConfig": {
    "rounded": true,
    "border": true
  },
  "diagnostic.format": "%message [%source]",
  "diagnostic.virtualText": true,
  "diagnostic.checkCurrentLine": true,
  "diagnostic.separateRelatedInformationAsDiagnostics": true,
  "eslint.autoFixOnSave": true,
  "eslint.format.enable": true,
  "eslint.packageManager": "yarn",
  "git.addGBlameToVirtualText": true,
  "go.goplsPath": "gopls",
  "go.goplsOptions": {
    "experimentalPostfixCompletions": true,
    "semanticTokens": true,
    "linksInHover": false,
    "hints": {
      "assignVariableTypes": true,
      "compositeLiteralFields": true,
      "compositeLiteralTypes": true,
      "constantValues": true,
      "functionTypeParameters": true,
      "parameterNames": false,
      "rangeVariableTypes": true
    },
    "usePlaceholders": true,
    "staticcheck": true
  },
  "hover.floatConfig": {
    "rounded": true,
    "border": true
  },
  "list.normalMappings": {
    "<C-c>": "do:exit"
  },
  "list.insertMappings": {
    "<C-c>": "do:exit"
  },
  "list.source.grep.useLiteral": false,
  "list.source.grep.defaultArgs": [
    "--ignore-case"
  ],
  "markdownlint.config": {
    "default": true,
    "line-length": false
  },
  "python.formatting.provider": "black",
  "python.formatting.blackdHTTPHeaders": {
    "X-Fast-Or-Safe": "fast"
  },
  "python.linting.enabled": false,
  "python.analysis.diagnosticMode": "workspace",
  "semanticTokens.enable": true,
  "signature.target": "echo",
  "suggest.detailField": "abbr",
  "suggest.defaultSortMethod": "none",
  "suggest.selection": "recentlyUsedByPrefix",
  "suggest.floatConfig": {
    "rounded": true,
    "border": true
  },
  "signature.floatConfig": {
    "rounded": true,
    "border": true
  },
  "sumneko-lua.enableNvimLuaDev": true,
  "Lua.completion.callSnippet": "Both",
  "Lua.completion.postfix": ".",
  "Lua.runtime.version": "LuaJIT",
  "Lua.telemetry.enable": false,
  "Lua.diagnostics.globals": [
    "vim",
    "jit"
  ],
  "snippet.choicesMenuPicker": true,
  "snippets.ultisnips.enable": false,
  "snippets.extends": {
    "javascriptreact": [
      "javascript"
    ],
    "typescript": [
      "javascript"
    ]
  },
  "tsserver.implicitProjectConfig.checkJs": true,
  "typescript.format.semicolons": "ignore",
  "typescript.autoClosingTags": true,
  "typescript.referencesCodeLens.showOnAllFunctions": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
  // "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.preferences.useAliasesForRenames": false,
  "languageserver": {}
}

{
  "suggest.noselect": false,
  "suggest.removeDuplicateItems": true,
  "suggest.completionItemKindLabels": {
    "keyword": "\uf1de",
    "variable": "\ue79b",
    "value": "\uf89f",
    "operator": "\u03a8",
    "constructor": "\uf0ad",
    "function": "\u0192",
    "reference": "\ufa46",
    "constant": "\uf8fe",
    "method": "\uf09a",
    "struct": "\ufb44",
    "class": "\uf0e8",
    "interface": "\uf417",
    "text": "\ue612",
    "enum": "\uf435",
    "enumMember": "\uf02b",
    "module": "\uf40d",
    "color": "\ue22b",
    "property": "\ue624",
    "field": "\uf9be",
    "unit": "\uf475",
    "event": "\ufacd",
    "file": "\uf723",
    "folder": "\uf114",
    "snippet": "\ue60b",
    "typeParameter": "\uf728",
    "default": "\uf29c"
  },
  "codeLens.enable": true,
  "codeLens.separator": "üîç",
  "coc.preferences.jumpCommand": "drop",
  "coc.preferences.rootPatterns": [
    ".git",
    ".vscode"
  ],
  "coc.preferences.formatOnSaveFiletypes": [
    "cucumber",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "css"
  ],
  // "cucumber.enable": false,
  // "cucumber.glue": [
  //   "cypress/integration/**/*.cucumber.ts"
  // ],
  // "cucumber.features": [
  //   "cypress/integration/**/*.feature"
  // ],
  "diagnostic.checkCurrentLine": false,
  "diagnostic.messageTarget": "float",
  "diagnostic.separateRelatedInformationAsDiagnostics": false,
  "diagnostic.virtualText": false,
  "diagnostic.virtualTextCurrentLineOnly": false,
  "Lua.telemetry.enable": false,
  "Lua.window.statusBar": false,
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": true,
  "python.linting.mypyEnabled": true,
  "python.formatting.provider": "black",
  "python.formatting.blackPath": "~/.local/bin/black",
  "python.venvPath": "/home/jhaine/.cache/pypoetry/virtualenvs/",
  "snippets.ultisnips.enable": false,
  "tsserver.npm": "/home/jhaine/.fnm/node-versions/v14.20.0/installation/bin/npm",
  "npm.binPath": "/home/jhaine/.fnm/node-versions/v14.20.0/installation/bin/npm",
  "javascript.referencesCodeLens.enable": false,
  "javascript.implementationsCodeLens.enable": false,
  "typescript.referencesCodeLens.enable": false,
  "typescript.implementationsCodeLens.enable": false,
  // "notification.disabledProgressSources": ["*"],
  "pyright.inlayHints.enable": false,
  "inlayHint.enableParameter": false
}



{
      2   // If false, CocFzf and Bqf-fzf open
      3   "coc.preferences.useQuickfixForLocations": true,
      4   "coc.preferences.extensionUpdateCheck": "daily",
      5   "coc.preferences.messageLevel": "error",
      6   "coc.preferences.currentFunctionSymbolAutoUpdate": true,
      7   // "coc.preferences.formatOnSaveFiletypes": [
      8   //   "go"
      9   // ],
     10   "coc.preferences.formatOnType": true,
     11   "coc.preferences.snippetHighlight": false,
     12   "coc.source.file.triggerCharacters": ["/"],
     13   "coc.source.file.ignoreHidden": false,
     14   "coc.source.file.shortcut": "Ôêî", // "Ôêî", "FIL"
     15   "coc.source.around.shortcut": "ARO", // "Ôôß",
     16   "coc.source.buffer.shortcut": "BUF", // "Ôúô",
     17   "coc.source.tag.shortcut": "TAG", // "ÔÄ´",
     18   "coc.source.word.shortcut": "WRD",
     19   "coc.source.syntax.shortcut": "SYN",
     20   "coc.source.file.priority": 13,
     21   "coc.source.around.priority": 11,
     22   "coc.source.buffer.priority": 12,
     23   "coc.source.tag.priority": 3,
     24   "coc.source.word.priority": 10,
     25   "coc.source.syntax.priority": 10,
     26   "outline.keepWindow": true,
     27   "outline.sortBy": "position",
     28   "outline.splitCommand": "botright 40vs",
     29   "outline.showLineNumber": true,
     30   "outline.followCursor": true,
     31   "outline.switchSortKey": "<C-s>",
     32   "tree.key.activeFilter": "zf",
     33   "tree.key.close": "qq",
     34   "tree.key.toggle": "t",
     35   "tree.key.selectNext": "<C-j>",
     36   "tree.key.selectPrevious": "<C-k>",
     37   // Filetypes that enable semanticTokens highlighting
     38   "semanticTokens.filetypes": [
     39     // "c",
     40     // "cpp",
     41     "go",
     42     "html",
     43     "java"
     44     // "javascript",
     45     // "lua",
     46     // "rust",
     47     // "typescript"
     48   ],
     49   "pullDiagnostic.onChange": true,
     50   "pullDiagnostic.onSave": false,
     51   "pullDiagnostic.workspace": false,
     52   "inlayHint.filetypes": ["*"],
     53   "inlayHint.refreshOnInsertMode": false,
     54   "inlayHint.enableParameter": true,
     55   "inlayHint.typeSeparator": "¬´ ", // "‚Ä£
     56   "inlayHint.parameterSeparator": "¬ª ",
     57   "inlayHint.subSeparator": " ",
     58   "diagnostic.errorSign": "Ôôô", // ÔÅû ‚Ä¢‚Ä¢
     59   "diagnostic.warningSign": "Ôî©", // ÔÅ± ‚Ä¢
     60   "diagnostic.hintSign": "Ô†µ", // ‚Ä¢
     61   "diagnostic.infoSign": "ÔÅö", // ‚Ä¢
     62   "diagnostic.checkCurrentLine": false,
     63   "diagnostic.level": "hint",
     64   "diagnostic.autoRefresh": true,
     65   "diagnostic.refreshOnInsertMode": false,
     66   "diagnostic.locationlistUpdate": true,
     67   "diagnostic.virtualText": true,
     68   "diagnostic.virtualTextLineSeparator": " \\ ",
     69   "diagnostic.virtualTextPrefix": " | ",
     70   // "diagnostic.virtualTextCurrentLineOnly": true,
     71   "diagnostic.format": "%message [%source%code]", // %source code severity message
     72   "diagnostic.signPriority": 50,
     73   "diagnostic.enableHighlightLineNumber": true,
     74   "diagnostic.messageTarget": "float",
     75   "diagnostic.separateRelatedInformationAsDiagnostics": true,
     76   // Float
     77   "floatFactory.floatConfig": {
     78     "border": true,
     79     "rounded": true,
     80     "highlight": "CocSuggestFloating",
     81     "borderhighlight": "FloatBorder",
     82     "maxWidth": 120,
     83     "focusable": true
     84   },
     85   "suggest.floatConfig": {
     86     "border": true,
     87     "rounded": true,
     88     "borderhighlight": "FloatBorder",
     89     "highlight": "CocSuggestFloating",
     90     "maxWidth": 120,
     91     "focusable": true
     92   },
     93   "diagnostic.floatConfig": {
     94     "border": true,
     95     "rounded": true,
     96     "borderhighlight": "FloatBorder",
     97     "highlight": "CocFloating",
     98     "maxWidth": 120,
     99     "focusable": true
    100   },
    101   "hover.floatConfig": {
    102     "border": true,
    103     "rounded": true,
    104     "borderhighlight": "SpellCap",
    105     "highlight": "CocFloating",
    106     "maxWidth": 120,
    107     "focusable": true
    108   },
    109   "signature.floatConfig": {
    110     "border": true,
    111     "rounded": true,
    112     "borderhighlight": "Normal",
    113     "highlight": "CocFloating",
    114     "maxWidth": 120,
    115     "focusable": true
    116   },
    117   // "dialog.floatHighlight": "Normal",
    118   "dialog.floatBorderHighlight": "Normal",
    119   "dialog.rounded": true,
    120   "notification.border": true,
    121   "notification.focusable": true,
    122   "notification.highlightGroup": "CocFloating",
    123   "diagnostic-languageserver.filetypes": {
    124     // "zsh": "shellcheck"
    125     // "sh": "shellcheck",
    126     // "yaml": ["yamllint"],
    127     // "lua": "selene",
    128     "cmake": ["cmake-lint"],
    129     "systemd": "systemd-analyze"
    130   },
    131   "diagnostic-languageserver.formatFiletypes": {
    132     // "sh": "shfmt"
    133     //   "zsh": "shfmt"
    134   },
    135   "prettier.tabWidth": 2,
    136   "prettier.singleQuote": true,
    137   "prettier.semi": true,
    138   "prettier.trailingComma": "es5",
    139   // "lightbulb.excludeFiletypes": [],
    140   // "lightbulb.enableVirtualText": true,
    141   // "lightbulb.virtualText": "üí°",
    142   // "lightbulb.text": "Code action",
    143   // "lightbulb.enableSign": false,
    144   "codeLens.enable": true,
    145   "codeLens.separator": "‚Ä£",
    146   "codeLens.subseparator": " | ",
    147   "codeLens.position": "eol",
    148   "list.indicator": ">",
    149   "signature.enable": true,
    150   "signature.target": "float",
    151   "tabnine.priority": 99,
    152   "tabnine.shortcut": "TN",
    153   "snippets.priority": 99,
    154   "snippets.shortcut": "Ôô≤",
    155   "snippets.ultisnips.directories": ["UltiSnips", "gosnippets/UltiSnips"],
    156   "snippets.userSnippetsDirectory": "~/.config/nvim/UltiSnips",
    157   "snippets.extends": {
    158     "cpp": ["c"],
    159     "typescript": ["javascript"]
    160   },
    161   // Gone after pum is merged
    162   // "suggest.disableMenu": true,
    163   // "suggest.enablePreview": true,
    164   // "suggest.noselect": false,
    165 
    166   "suggest.pumFloatConfig": {
    167     "border": true,
    168     "rounded": true,
    169     "highlight": "CocSuggestFloating",
    170     "borderhighlight": "FloatBorder",
    171     "maxWidth": 120,
    172     "focusable": true
    173   },
    174 
    175   "suggest.snippetIndicator": "",
    176   "suggest.languageSourcePriority": 99,
    177   "suggest.removeDuplicateItems": true,
    178   "suggest.detailField": "preview",
    179   "suggest.detailMaxLength": 100,
    180   "suggest.defaultSortMethod": "none",
    181   "suggest.virtualText": false,
    182   "suggest.selection": "first", // recentlyUsed
    183   "suggest.acceptSuggestionOnCommitCharacter": true,
    184   "suggest.completionItemKindLabels": {
    185     "default": "Ôäú",
    186     "text": "Ôùæ", // Óòí
    187     "method": "Ôö¶", // ÔÇö
    188     "function": "Ôûî", // ∆í
    189     "constructor": "ÔÇ≠", // Ôê£
    190     "field": "Ôõº", // Ô¶æÓúñ Ôõº ÔÄ´
    191     "variable": "Ôñ†", // Óûõ Ôö¶
    192     "class": "ÔÉ®", // Ô¥Ø ÔÜ≥
    193     "interface": "Ôêó", // ÔÉ®
    194     "module": "Ôêç", // Ôíá
    195     "property": "Óò§", // Ô∞†
    196     "unit": "Ôëµ", // Óàü Ô•¨
    197     "value": "Ô¢ü",
    198     "enum": "ÔÖù", // Ôêµ
    199     "keyword": "Ôáû", // Ô†ä
    200     "snippet": "Óòã", // Ôóè ÔÉê ÔÉÑ Ôëè
    201     "color": "Óà´",
    202     "file": "Ôúò", // Ôú£
    203     "reference": "ÔíÅ", // ÔúÜ Ô©Ü
    204     "folder": "Ôùä", // ÔÑî
    205     "enumMember": "ÔÄ´", // ÔÖù
    206     "constant": "Ô£æ", // Ôõº
    207     "struct": "Ô≠Ñ", // ÔÜ≥
    208     "event": "ÔÉß", // Ô´ç
    209     "operator": "Œ®", // Ôöî
    210     "typeParameter": "ÔûÉ" // Óòé Ôú® Ôô±
    211   },
    212   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    213   // ‚îÇ                          Clangd                          ‚îÇ
    214   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    215   "clangd.enabled": true,
    216   "clangd.inlayHints.enable": true,
    217   "clangd.inlayHints.sep": "Ôßñ", // "‚Ä£ÓòÇ ÔßñÔßóÔäí ÔÄ´ ÔÄ¨"
    218   "clangd.arguments": [
    219     "--query-driver=/usr/bin/clang++",
    220     "--background-index",
    221     "--clang-tidy",
    222     "--completion-style=detailed",
    223     "--fallback-style=google",
    224     "--header-insertion=iwyu",
    225     "--suggest-missing-includes"
    226   ],
    227   "clangd.trace.server": "off",
    228   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    229   // ‚îÇ                           Rust                           ‚îÇ
    230   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    231   "rust-analyzer.enable": true,
    232   "rust-analyzer.trace.server": "off",
    233   "rust-analyzer.server.path": "rust-analyzer",
    234   "rust-analyzer.updates.channel": "nightly",
    235   "rust-analyzer.updates.checkOnStartup": true,
    236   "rust-analyzer.procMacro.enable": true,
    237   "rust-analyzer.procMacro.attributes.enable": true,
    238   "rust-analyzer.cargo.buildScripts.enable": true,
    239   "rust-analyzer.updates.prompt": true,
    240   "rust-analyzer.completion.autoimport.enable": true,
    241   "rust-analyzer.completion.autoself.enable": true,
    242   "rust-analyzer.completion.callable.snippets": "fill_arguments",
    243   "rust-analyzer.notifications.cargoTomlNotFound": true,
    244   "rust-analyzer.completion.postfix.enable": true,
    245   "rust-analyzer.diagnostics.enable": true,
    246   "rust-analyzer.lens.enable": true,
    247   "rust-analyzer.lens.implementations.enable": true,
    248   "rust-analyzer.lens.references.adt.enable": true,
    249   "rust-analyzer.lens.references.enumVariant.enable": false,
    250   "rust-analyzer.lens.references.method.enable": true,
    251   "rust-analyzer.lens.references.trait.enable": true,
    252   "rust-analyzer.lens.run.enable": true,
    253   "rust-analyzer.lens.debug.enable": true,
    254   "rust-analyzer.debug.vimspector.configuration.name": "launch",
    255   "rust-analyzer.inlayHints.enable": true,
    256   "rust-analyzer.inlayHints.bindingModeHints.enable": true, // Unsure what this is
    257   "rust-analyzer.inlayHints.chainingHints.enable": true,
    258   "rust-analyzer.inlayHints.closingBraceHints.enable": false, // Shows things slike 'fn fname'
    259   "rust-analyzer.inlayHints.closingBraceHints.minLines": 25,
    260   "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "never",
    261   "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "skip_trivial",
    262   "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": true,
    263   "rust-analyzer.inlayHints.maxLength": 30,
    264   "rust-analyzer.inlayHints.parameterHints.enable": true,
    265   "rust-analyzer.inlayHints.reborrowHints.enable": "always",
    266   "rust-analyzer.inlayHints.renderColons": false,
    267   "rust-analyzer.inlayHints.typeHints.enable": true,
    268   "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": false,
    269   "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": false,
    270   // "rust-analyzer.inlayHints.refreshOnInsertMode": false,
    271   // "rust-analyzer.inlayHints.typeHintsSeparator": "Ôßñ", // ‚Ä£
    272   // "rust-analyzer.inlayHints.chainingHintsSeparator": "‚Ä£",
    273   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    274   // ‚îÇ                          Golang                          ‚îÇ
    275   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    276   "go.trace.server": "off",
    277   "go.goplsPath": "gopls",
    278   "go.goplsUseDaemon": false,
    279   "go.goplsOptions": {
    280     "codelenses": {
    281       "generate": true,
    282       "gc_details": false,
    283       "tidy": true
    284     },
    285     "usePlaceholders": true,
    286     "semanticTokens": true,
    287     "experimentalPostfixCompletions": true,
    288     "staticcheck": true,
    289     "analyses": {
    290       "unusedparams": true
    291     },
    292     "hints": {
    293       "assignVariableTypes": true,
    294       "compositeLiteralFields": true,
    295       "compositeLiteralTypes": true,
    296       "constantValues": true,
    297       "functionTypeParameters": true,
    298       "parameterNames": false,
    299       "rangeVariableTypes": true
    300     }
    301   },
    302   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    303   // ‚îÇ                           Lua                            ‚îÇ
    304   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    305   // https://github.com/xiyaowong/coc-sumneko-lua/blob/main/settings.md
    306   //
    307   // The Coc package for Lua provides inline hints, which is better
    308   // than a manual setup (can be found below)
    309   "sumneko-lua.enable": true,
    310   "sumneko-lua.enableNvimLuaDev": true,
    311   "sumneko-lua.checkUpdate": true,
    312   "sumneko-lua.inlayHints.refreshOnInsertMode": false,
    313   "sumneko-lua.inlayHints.trimSemicolon": false,
    314   "sumneko-lua.inlayHints.typeHintsPrefix": "¬´ ",
    315   "sumneko-lua.inlayHints.paramHintsPrefix": "¬ª ",
    316   "Lua.misc.parameters": [],
    317   "Lua.telemetry.enable": false,
    318   "Lua.runtime.version": "LuaJIT",
    319   "Lua.runtime.path": ["?.lua", "?/init.lua"],
    320   "Lua.workspace.checkThirdParty": false,
    321   "Lua.workspace.maxPreload": 10000,
    322   "Lua.workspace.ignoreDir": [".vscode", ".git"],
    323   "Lua.workspace.preloadFileSize": 10000,
    324   "Lua.workspace.library": [
    325     "/home/lucas/.config/nvim/lua"
    326     // "/home/lucas/.local/share/nvim/site/pack/packer/opt",
    327     // "/home/lucas/.local/share/nvim/site/pack/packer/start"
    328   ],
    329   "Lua.format.enable": false,
    330   "Lua.completion.enable": true,
    331   "Lua.completion.showParams": true,
    332   "Lua.completion.autoRequire": true,
    333   "Lua.completion.callSnippet": "Replace",
    334   "Lua.completion.postfix": ".",
    335   // sumneko-lua.inlayHints already does this (though it is displayed the same color as CodeLens)
    336   "Lua.hint.enable": false,
    337   "Lua.hint.await": true,
    338   "Lua.hint.paramName": "All",
    339   "Lua.hint.arrayIndex": "Enable",
    340   "Lua.hint.setType": true,
    341   "Lua.hint.paramType": true,
    342   "Lua.hover.enable": true,
    343   "Lua.hover.expandAlias": true,
    344   "Lua.hover.enumsLimit": 5,
    345   "Lua.hover.viewString": true,
    346   "Lua.hover.viewNumber": true,
    347   "Lua.window.statusBar": false,
    348   "Lua.window.progressBar": false, // FIX: I like having this but somehow it cancels startup
    349   "Lua.type.castNumberToInteger": true,
    350   "Lua.semantic.annotation": true,
    351   "Lua.semantic.variable": true,
    352   "Lua.semantic.enable": true,
    353   "Lua.semantic.keyword": false,
    354   "Lua.diagnostics.enable": true,
    355   // "Lua.diagnostics.workspaceDelay": -1,
    356   "Lua.diagnostics.libraryFiles": "Opened",
    357   "Lua.diagnostics.neededFileStatus": {
    358     // https://github.com/sumneko/lua-language-server/wiki/Diagnostics
    359     "different-requires": "None",
    360     "codestyle-check": "None",
    361     "param-type-mismatch": "None",
    362     "need-check-nil": "None",
    363     "redefined-local": "None",
    364     "missing-parameter": "None",
    365     "redundant-parameter": "None",
    366     "lowercase-global": "None",
    367 
    368     "ambiguity-1": "Opened",
    369     "circle-doc-class": "Opened",
    370     "close-non-object": "Opened",
    371     "count-down-loop": "Opened",
    372     "doc-field-no-class": "Opened",
    373     "duplicate-doc-alias": "Opened",
    374     "duplicate-doc-field": "Opened",
    375     "duplicate-doc-param": "Opened",
    376     "duplicate-index": "Opened",
    377     "duplicate-set-field": "Opened",
    378     "global-in-nil-env": "Opened",
    379     "newfield-call": "Opened",
    380     "newline-call": "Opened",
    381     "unbalanced-assignments": "Opened",
    382     "undefined-doc-class": "Opened",
    383     "undefined-doc-name": "Opened",
    384     "undefined-doc-param": "Opened",
    385     "undefined-env-child": "Opened",
    386     "undefined-field": "Opened",
    387     "undefined-global": "Opened",
    388     "unknown-diag-code": "Opened",
    389     "unknown-cast-variable": "Opened"
    390   },
    391   "Lua.diagnostics.disable": [
    392     "lowercase-global",
    393     "redundant-parameter",
    394     "missing-parameter",
    395     "redefined-local",
    396     // New
    397     "codestyle-check",
    398     "need-check-nil",
    399     "param-type-mismatch" // Until the builtin functions are updated totally, this should be off
    400   ],
    401   "Lua.diagnostics.globals": [
    402     "dev",
    403     // "a",
    404     // "async",
    405     "Path",
    406     "Job",
    407     "List",
    408     // "ex",
    409     // "F",
    410     // "uv",
    411     // "api",
    412     // "fn",
    413     // "cmd",
    414     // "env",
    415     // "o",
    416     // "b",
    417     // "w",
    418     "p",
    419     "R",
    420     "P",
    421     "RELOAD",
    422     "BLACKLIST_FT",
    423     "packer_plugins",
    424     "_t",
    425     "hs",
    426     "vim",
    427     "nvim",
    428     "it",
    429     "describe",
    430     "before_each",
    431     "after_each",
    432     "await",
    433     "async",
    434     "Promise"
    435   ],
    436   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    437   // ‚îÇ                           Ruby                           ‚îÇ
    438   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    439   "solargraph.diagnostics": true,
    440   "solargraph.autoformat": true,
    441   "solargraph.formatting": true,
    442   "solargraph.trace.server": "off",
    443   "solargraph.folding": true,
    444   "solargraph.symbols": true,
    445   "solargraph.references": true,
    446   "solargraph.definitions": true,
    447   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    448   // ‚îÇ                          Python                          ‚îÇ
    449   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    450   // "python.jediEnabled": true,
    451   "python.formatting.provider": "black",
    452   "python.linting.enabled": true,
    453   "python.linting.flake8Enabled": true,
    454   "python.linting.pylintEnabled": true,
    455   "python.linting.pylintPath": "pylint",
    456   "python.pythonPath": "/home/lucas/.local/share/pyenv/shims/python",
    457   "python.analysis.diagnosticMode": "workspace",
    458   // "python.analysis.diagnosticMode": "openFilesOnly",
    459   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    460   // ‚îÇ                           Java                           ‚îÇ
    461   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    462   "java.trace.server": "off",
    463   "java.enabled": true,
    464   "java.codeGeneration.useBlocks": true,
    465   "java.import.maven.enabled": true,
    466   "java.maven.downloadSources": false,
    467   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    468   // ‚îÇ                          Dlang                           ‚îÇ
    469   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    470   // "d.enabled": true,
    471   // "d.servedPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/serve-d",
    472   // "d.dcdServerPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/dcd-server",
    473   // "d.dcdClientPath": "/home/lucas/.config/coc/extensions/coc-dlang-data/dcd-client",
    474   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    475   // ‚îÇ                           SQL                            ‚îÇ
    476   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    477   "sql.formatOptions": {
    478     "indent": "    "
    479   },
    480   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    481   // ‚îÇ                    Config file types                     ‚îÇ
    482   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    483   "json.trace.server": "off",
    484   "json.schemaDownload.enable": true,
    485   "json.schemas": [
    486     {
    487       "description": "Snippet files",
    488       "fileMatch": ["*/nvim/snippets/*.json", "!*/nvim/snippets/snippets.json"],
    489       "url": "https://raw.githubusercontent.com/kevinhwang91/dotfiles/main/nvim/snippets/snippets.json"
    490     },
    491     {
    492       "description": "TypeScript compiler configuration file",
    493       "fileMatch": ["tsconfig.json", "tsconfig.*.json"],
    494       "url": "https://json.schemastore.org/tsconfig.json"
    495     },
    496     {
    497       "description": "Babel configuration",
    498       "fileMatch": [".babelrc.json", ".babelrc", "babel.config.json"],
    499       "url": "https://json.schemastore.org/babelrc.json"
    500     },
    501     {
    502       "description": "ESLint config",
    503       "fileMatch": [".eslintrc.json", ".eslintrc"],
    504       "url": "https://json.schemastore.org/eslintrc.json"
    505     },
    506     {
    507       "description": "Prettier config",
    508       "fileMatch": [".prettierrc", ".prettierrc.json", "prettier.config.json"],
    509       "url": "https://json.schemastore.org/prettierc"
    510     },
    511     {
    512       "description": "Bucklescript config",
    513       "fileMatch": ["bsconfig.json"],
    514       "url": "https://raw.githubusercontent.com/rescript-lang/rescript-compiler/8.2.0/docs/docson/build-schema.json"
    515     },
    516     {
    517       "description": "Lerna config",
    518       "fileMatch": ["lerna.json"],
    519       "url": "https://json.schemastore.org/lerna.json"
    520     },
    521     {
    522       "description": "Stylelint config",
    523       "fileMatch": [
    524         ".stylelintrc",
    525         ".stylelintrc.json",
    526         "stylelint.config.json"
    527       ],
    528       "url": "https://json.schemastore.org/stylelintrc"
    529     },
    530     {
    531       "description": "A JSON schema for the ASP.NET LaunchSettings.json files",
    532       "fileMatch": ["launchsettings.json"],
    533       "url": "https://json.schemastore.org/launchsettings.json"
    534     },
    535     {
    536       "description": "Schema for CMake Presets",
    537       "fileMatch": ["CMakePresets.json", "CMakeUserPresets.json"],
    538       "url": "https://raw.githubusercontent.com/Kitware/CMake/master/Help/manual/presets/schema.json"
    539     },
    540     {
    541       "description": "Config file for Command Task Runner",
    542       "fileMatch": ["commands.json"],
    543       "url": "https://json.schemastore.org/commands.json"
    544     },
    545     {
    546       "description": "LLVM compilation database",
    547       "fileMatch": ["compile_commands.json"],
    548       "url": "https://json.schemastore.org/compile-commands.json"
    549     },
    550     {
    551       "description": "AWS CloudFormation infrastructure resources in your cloud environment",
    552       "fileMatch": ["*.cf.json", "cloudformation.json"],
    553       "url": "https://raw.githubusercontent.com/awslabs/goformation/v5.2.9/schema/cloudformation.schema.json"
    554     },
    555     {
    556       "description": "JSON schema for properties JSON file for a GitHub Workflow template",
    557       "fileMatch": [".github/workflow-templates/**.properties.json"],
    558       "url": "https://json.schemastore.org/github-workflow-template-properties.json"
    559     },
    560     {
    561       "description": "golangci-lint configuration file",
    562       "fileMatch": [".golangci.toml", ".golangci.json"],
    563       "url": "https://json.schemastore.org/golangci-lint.json"
    564     },
    565     {
    566       "description": "Packer template JSON configuration",
    567       "fileMatch": ["packer.json"],
    568       "url": "https://json.schemastore.org/packer.json"
    569     },
    570     {
    571       "description": "NPM configuration file",
    572       "fileMatch": ["package.json"],
    573       "url": "https://json.schemastore.org/package.json"
    574     },
    575     {
    576       "description": "JSON schema for nodemon.json configuration files",
    577       "fileMatch": ["nodemon.json"],
    578       "url": "https://json.schemastore.org/nodemon.json"
    579     },
    580     {
    581       "description": "Sumneko_lua config file",
    582       "fileMatch": [".luarc.json"],
    583       "url": "https://raw.githubusercontent.com/sumneko/vscode-lua/master/setting/schema.json"
    584     }
    585   ],
    586   "yaml.trace.server": "off",
    587   "yaml.schemaStore.enable": true,
    588   "yaml.schemas": {},
    589   "yaml.validate": true,
    590   "yaml.format.singleQuote": true,
    591   "yaml.completion": true,
    592   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    593   // ‚îÇ                  Typescript/Javascript                   ‚îÇ
    594   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    595   "eslint.packageManager": "yarn",
    596   "eslint.run": "onSave",
    597   "eslint.trace.server": "off",
    598   "eslint.autoFixOnSave": false,
    599   "eslint.format.enable": true,
    600   "tsserver.trace.server": "off",
    601   // Typescript
    602   "typescript.format.enabled": true,
    603   "typescript.preferences.quoteStyle": "double",
    604   "typescript.preferences.useAliasesForRenames": false,
    605   "typescript.format.semicolons": "insert",
    606   "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
    607   "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
    608   "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
    609   // FIX: The codelens and inlayhints swap places when typing (create an issue if I can't)
    610   "typescript.referencesCodeLens.showOnAllFunctions": true,
    611   "typescript.implementationsCodeLens.enable": true,
    612   "typescript.referencesCodeLens.enable": false,
    613   "typescript.inlayHints.parameterNames.enabled": "literals",
    614   "typescript.inlayHints.variableTypes.enabled": true,
    615   "typescript.inlayHints.parameterTypes.enabled": true,
    616   "typescript.inlayHints.enumMemberValues.enabled": true,
    617   "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    618   "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    619   "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
    620   // Javascript
    621   "javascript.format.enabled": true,
    622   "javascript.preferences.quoteStyle": "double",
    623   "javascript.format.semicolons": "insert",
    624   "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
    625   "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
    626   "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    627   "javascript.inlayHints.parameterNames.enabled": "all",
    628   "javascript.inlayHints.variableTypes.enabled": true,
    629   "javascript.inlayHints.parameterTypes.enabled": true,
    630   "javascript.inlayHints.enumMemberValues.enabled": true,
    631   "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    632   "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    633   "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
    634   "vimlsp.diagnostic.enable": true,
    635   "vimlsp.trace.server": "off",
    636   "xml.trace.server": "off",
    637   "xml.format.quotations": "doubleQuotes",
    638   "xml.format.enabled": true,
    639   "xml.symbols.enabled": true,
    640   "xml.codeLens.enabled": true,
    641   "html.trace.server": "off",
    642   "css.trace.server": "off",
    643   "zig.path": "/usr/bin/zls",
    644 
    645   // "sh.enable": true,
    646   // "yank.highlight.duration": 100,
    647   // "yank.enableCompletion": false,
    648 
    649   "markdownlint.config": {
    650     "default": true,
    651     "line-length": false
    652   },
    653   // ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
    654   // ‚îÇ                      Language Server                     ‚îÇ
    655   // ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
    656   "languageserver": {
    657     // "selene": {
    658     //   "command": "selene",
    659     //   "rootPatterns": [".git/", ".luacheckrc", "selene.toml", ".luarc.json"],
    660     //   "filetypes": ["lua"]
    661     // },
    662     // "golang": {
    663     //   "command": "gopls",
    664     //   "rootPatterns": ["go.mod", ".vim/", ".git/", ".hg/"],
    665     //   "filetypes": ["go"]
    666     // },
    667     // "ccls": {
    668     //   "command": "ccls",
    669     //   "filetypes": ["c", "cpp", "objc", "objcpp"],
    670     //   "rootPatterns": [
    671     //     ".ccls",
    672     //     "compile_commands.json",
    673     //     ".vim/",
    674     //     ".git/",
    675     //     ".hg/"
    676     //   ],
    677     //   "initializationOptions": {
    678     //     "cache": {
    679     //       "directory": "/tmp/ccls"
    680     //     }
    681     //   }
    682     // },
    683     // "R": {
    684     //   "command": "/usr/bin/R",
    685     //   "args": ["--slave", "-e", "languageserver::run()"],
    686     //   "filetypes": ["r"]
    687     // },
    688     // "zls": {
    689     //   "command": "/usr/bin/zls",
    690     //   "filetypes": ["zig"]
    691     // },
    692     // "serve-d": {
    693     //   "command": "/usr/bin/serve-d",
    694     //   "filetypes": ["d"]
    695     // },
    696     // "bash": {
    697     //   "command": "bash-language-server",
    698     //   "args": ["start"],
    699     //   "filetypes": ["sh"]
    700     // },
    701     "efm": {
    702       "initializationOptions": {
    703         "documentFormatting": true
    704       },
    705       "command": "efm-langserver",
    706       "args": [],
    707       "filetypes": ["sh", "teal", "python"],
    708       "settings": {
    709         "rootMarkers": [".git/"],
    710         "languages": {
    711           "sh": [
    712             {
    713               "lintCommand": "shellcheck -f gcc -x",
    714               "lintSource": "shellcheck",
    715               "lintFormats": [
    716                 "%f:%l:%c: %trror: %m",
    717                 "%f:%l:%c: %tarning: %m",
    718                 "%f:%l:%c: %tarning: %m"
    719               ],
    720               "formatCommand": "shfmt -i 2",
    721               "formatStdin": true
    722             }
    723           ]
    724           // "python": [
    725           //   {
    726           //     "lintCommand": "mypy --show-column-numbers",
    727           //     "lintSource": "mypy",
    728           //     "lintFormats": [
    729           //       "%f:%l:%c: %trror: %m",
    730           //       "%f:%l:%c: %tarning: %m",
    731           //       "%f:%l:%c: %tote: %m"
    732           //     ]
    733           //   }
    734           // ]
    735           // "teal": [
    736           //   {
    737           //     "formatCommand": "lua-format -i",
    738           //     "formatStdin": true
    739           //   }
    740           // ]
    741         }
    742       }
    743     },
    744     "dockerfile": {
    745       "command": "docker-langserver",
    746       "filetypes": ["dockerfile"],
    747       "args": ["--stdio"]
    748     },
    749     "teal": {
    750       "command": "teal-language-server",
    751       "filetypes": ["teal"],
    752       "rootPatterns": [".git/", "tlconfig.lua"]
    753     },
    754     "awk": {
    755       "command": "awk-language-server",
    756       "filetypes": ["awk"]
    757     },
    758     // "rescript": {
    759     //   "enable": true,
    760     //   "module": "~/.local/share/nvim/site/pack/packer/start/vim-rescript/server/out/server.js",
    761     //   "args": [
    762     //     "--node-ipc"
    763     //   ],
    764     //   "filetypes": [
    765     //     "rescript"
    766     //   ],
    767     //   "rootPatterns": [
    768     //     "bsconfig.json"
    769     //   ]
    770     // },
    771     "crystal": {
    772       "command": "crystalline",
    773       "args": ["--stdio"],
    774       "filetypes": ["crystal"]
    775     }
    776   }
    777 }

